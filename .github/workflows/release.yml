name: Release

on:
  push:
    tags: ['**']
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build:
    name: build on ${{ matrix.os }} (${{ matrix.target }})
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    strategy:
      fail-fast: false
      matrix:
        os: [linux, macos, windows]
        target: [x86_64, aarch64]
        include:
          - os: linux
            runs-on: ubuntu-latest
          - os: macos
            runs-on: macos-latest
          - os: windows
            runs-on: windows-latest
        exclude:
          # Windows aarch64 not supported yet
          - os: windows
            target: aarch64
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v4

      - name: set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: install rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
          rust-toolchain: stable

      - name: upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: pypi_files_${{ matrix.os }}_${{ matrix.target }}
          path: dist

  build-sdist:
    name: build sdist
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4

      - name: set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          rust-toolchain: stable

      - name: upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: pypi_files_sdist
          path: dist

  release:
    name: create github release
    runs-on: ubuntu-latest
    needs: [build, build-sdist]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4

      - name: get dist artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: pypi_files_*
          merge-multiple: true
          path: dist

      - name: create github release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          generate_release_notes: true
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}

  publish:
    name: publish to pypi
    runs-on: ubuntu-latest
    needs: [build, build-sdist]
    if: startsWith(github.ref, 'refs/tags/')
    environment: release
    permissions:
      id-token: write
    steps:
      - name: get dist artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: pypi_files_*
          merge-multiple: true
          path: dist

      - name: publish to pypi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
