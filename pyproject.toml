[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "rez-core"
version = "0.1.0"
description = "High-performance core components for Rez package manager"
authors = [
    {name = "LongHao", email = "hal.long@outlook.com"},
]
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Rust",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["rez", "package-manager", "dependency-resolution", "version-management"]

[project.urls]
Homepage = "https://github.com/loonghao/rez-core"
Repository = "https://github.com/loonghao/rez-core"
Issues = "https://github.com/loonghao/rez-core/issues"

[dependency-groups]
dev = ["maturin"]
testing = [
    { include-group = "dev" },
    "pytest",
    "pytest-cov",
    "pytest-benchmark",
    "pytest-mock",
    "pytest-timeout",
    "coverage",
    "hypothesis",
]
linting = [
    { include-group = "dev" },
    "ruff",
    "mypy",
]
all = [
    { include-group = "dev" },
    { include-group = "testing" },
    { include-group = "linting" },
]

[tool.maturin]
python-source = "python"
module-name = "rez_core._rez_core"
features = ["pyo3/extension-module", "pyo3/abi3-py38"]

[tool.pytest.ini_options]
testpaths = ["tests/python"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--color=yes",
    "--durations=10",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "performance: Performance tests",
    "slow: Slow running tests",
    "compat: Compatibility tests with original rez",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
minversion = "6.0"

[tool.coverage.run]
source = ["rez_core"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.uv]
# this ensures that `uv run` doesn't actually build the package; a `make`
# command is needed to build
package = false
